// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import Select from "@/wab/client/components/widgets/Select";
import {
  DefaultPermissionRuleProps,
  PlasmicPermissionRule,
  PlasmicPermissionRule__OverridesType,
} from "@/wab/client/plasmic/plasmic_kit_end_user_management/PlasmicPermissionRule";
import { ApiAppRole } from "@/wab/shared/ApiSchema";
import { HTMLElementRefOf } from "@plasmicapp/react-web";
import { Menu } from "antd";
import * as React from "react";

export interface PermissionRuleProps
  extends DefaultPermissionRuleProps,
    Pick<PlasmicPermissionRule__OverridesType, "infoIcon"> {
  value: string | undefined | null;
  onChange: (value: string | undefined | null) => Promise<void>;
  onRemove?: () => Promise<void>;
  showDenied?: boolean;
  roles: ApiAppRole[];
  isFake?: boolean;
}

function PermissionRule_(
  props: PermissionRuleProps,
  ref: HTMLElementRefOf<"div">
) {
  const { value, onChange, onRemove, showDenied, roles, isFake, ...rest } =
    props;
  return (
    <PlasmicPermissionRule
      root={{ ref }}
      permissionSelect={{
        placeholder: "Denied",
        value,
        isDisabled: isFake,
        onChange,
        children: (
          <>
            {showDenied ? (
              <Select.Option value={"denied"}>Denied</Select.Option>
            ) : null}
            {(roles ?? []).map((role) => (
              <Select.Option key={role.id} value={role.id}>
                {role.name}
              </Select.Option>
            ))}
          </>
        ),
      }}
      menuBtn={{
        menu: (
          <Menu>
            <Menu.Item
              disabled={isFake}
              onClick={async () => {
                if (onRemove) {
                  await onRemove();
                }
              }}
            >
              Remove
            </Menu.Item>
          </Menu>
        ),
      }}
      {...rest}
    />
  );
}

const PermissionRule = React.forwardRef(PermissionRule_);
export default PermissionRule;
