// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import { AuthTokenTooltip } from "@/wab/client/components/widgets/DetailedTooltips";
import { LabelWithDetailedTooltip } from "@/wab/client/components/widgets/LabelWithDetailedTooltip";
import {
  DefaultAuthConfigTokenProps,
  PlasmicAuthConfigToken,
} from "@/wab/client/plasmic/plasmic_kit_end_user_management/PlasmicAuthConfigToken";
import { HTMLElementRefOf } from "@plasmicapp/react-web";
import * as React from "react";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface AuthConfigTokenProps extends Omit<DefaultAuthConfigTokenProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultAuthConfigTokenProps altogether and have
// total control over the props for your component.
export interface AuthConfigTokenProps extends DefaultAuthConfigTokenProps {
  onCopy: () => void;
}

function AuthConfigToken_(
  props: AuthConfigTokenProps,
  ref: HTMLElementRefOf<"div">
) {
  const { onCopy, ...rest } = props;

  return (
    <PlasmicAuthConfigToken
      root={{ ref }}
      tokenLabel={{
        wrap: (node) => (
          <LabelWithDetailedTooltip tooltip={AuthTokenTooltip}>
            {node}
          </LabelWithDetailedTooltip>
        ),
      }}
      copyBtn={{
        onClick: onCopy,
      }}
      {...rest}
    />
  );
}

const AuthConfigToken = React.forwardRef(AuthConfigToken_);
export default AuthConfigToken;
