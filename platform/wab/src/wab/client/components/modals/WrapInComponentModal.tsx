// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import ListItem from "@/wab/client/components/ListItem";
import { showTemporaryPrompt } from "@/wab/client/components/quick-modals";
import Button from "@/wab/client/components/widgets/Button";
import { Icon } from "@/wab/client/components/widgets/Icon";
import ComponentIcon from "@/wab/client/plasmic/plasmic_kit/PlasmicIcon__Component";
import { StudioCtx } from "@/wab/client/studio-ctx/StudioCtx";
import { getComponentDisplayName } from "@/wab/shared/core/components";
import { isBuiltinCodeComponent } from "@/wab/shared/code-components/builtin-code-components";
import { Component } from "@/wab/shared/model/classes";
import * as React from "react";
import { Modal } from "@/wab/client/components/widgets/Modal";

type WrapInComponentResponse = Component | undefined;

export async function promptWrapInComponent(props: {
  studioCtx: StudioCtx;
  component: Component;
}) {
  const { studioCtx, component } = props;
  return showTemporaryPrompt<WrapInComponentResponse>((onSubmit, onCancel) => (
    <Modal
      title={"Wrap in component"}
      visible={true}
      footer={null}
      onCancel={() => onCancel()}
    >
      <p>
        Choose the component to wrap the selected items
        <br />
        <small>Only components with a children slot can be used</small>
      </p>
      <div className="flex flex-col">
        {studioCtx.site.components
          .filter(
            (c) =>
              c !== component &&
              !isBuiltinCodeComponent(c) &&
              c.params.some((param) => param.variable.name === "children")
          )
          .map((c) => (
            <ListItem
              icon={<Icon icon={ComponentIcon} />}
              onClick={() => onSubmit(c)}
            >
              {getComponentDisplayName(c)}
            </ListItem>
          ))}
      </div>
      <div className="flex flex-hcenter pt-m">
        <Button onClick={onCancel}>Cancel</Button>
      </div>
    </Modal>
  ));
}
