// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import { findMatchingSplitToGroup } from "@/wab/client/components/splits/split-utils";
import {
  DefaultExperimentCanvasButtonProps,
  PlasmicExperimentCanvasButton,
} from "@/wab/client/plasmic/plasmic_kit_optimize/PlasmicExperimentCanvasButton";
import { useStudioCtx } from "@/wab/client/studio-ctx/StudioCtx";
import { Split, VariantGroup } from "@/wab/shared/model/classes";
import { SplitType } from "@/wab/shared/core/splits";
import * as React from "react";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface ExperimentCanvasButtonProps extends Omit<DefaultExperimentCanvasButtonProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultExperimentCanvasButtonProps altogether and have
// total control over the props for your component.
export interface ExperimentCanvasButtonProps
  extends DefaultExperimentCanvasButtonProps {
  group: VariantGroup;
}

const convertSplitType = (split: Split) => {
  // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check
  switch (split.splitType) {
    case SplitType.Experiment:
      return "abTest";
    case SplitType.Schedule:
      return "scheduled";
    case SplitType.Segment:
      return "segement";
  }
  return undefined;
};

function ExperimentCanvasButton(props: ExperimentCanvasButtonProps) {
  const { group } = props;
  const studioCtx = useStudioCtx();
  const splits = studioCtx.site.splits;
  const match = findMatchingSplitToGroup(splits, group);

  if (!match) {
    return null;
  }

  const handleClick = () => {
    studioCtx.switchLeftTab("splits");
    studioCtx.forceOpenSplit = match;
  };

  return (
    <PlasmicExperimentCanvasButton
      type={convertSplitType(match)}
      onClick={handleClick}
    />
  );
}

export default ExperimentCanvasButton;
