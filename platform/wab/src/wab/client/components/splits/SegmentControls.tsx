// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import SegmentQueryBuilder, {
  getHumanFormatRules,
} from "@/wab/client/components/splits/SegmentQueryBuilder";
import {
  DefaultSegmentControlsProps,
  PlasmicSegmentControls,
} from "@/wab/client/plasmic/plasmic_kit_optimize/PlasmicSegmentControls";
import PlasmicSegmentModal from "@/wab/client/plasmic/plasmic_kit_optimize/PlasmicSegmentModal";
import { HTMLElementRefOf } from "@plasmicapp/react-web";
import * as React from "react";
import { FocusScope } from "react-aria";
import { Modal } from "@/wab/client/components/widgets/Modal";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface SegmentControlsProps extends Omit<DefaultSegmentControlsProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultSegmentControlsProps altogether and have
// total control over the props for your component.
export interface SegmentControlsProps extends DefaultSegmentControlsProps {
  value: any;
  onChange: (_: string) => void;
}

const MODAL_WIDTH = 700;

function SegmentControls_(
  props: SegmentControlsProps,
  ref: HTMLElementRefOf<"div">
) {
  const { value, onChange } = props;
  const obj = JSON.parse(value);
  const logic = obj["__logic"] as any;
  const saveLogic = (newLogic: any) => {
    onChange(
      JSON.stringify({
        __logic: newLogic,
      })
    );
  };

  const humanStringRules = getHumanFormatRules(logic);

  const [builderVisible, setBuilderVisible] = React.useState(false);

  return (
    <>
      <Modal
        visible={builderVisible}
        footer={null}
        width={MODAL_WIDTH}
        onCancel={() => setBuilderVisible(false)}
      >
        <PlasmicSegmentModal
          builder={
            <FocusScope autoFocus contain={true}>
              <SegmentQueryBuilder saveLogic={saveLogic} logic={logic} />
            </FocusScope>
          }
        />
      </Modal>

      <PlasmicSegmentControls
        root={{ ref }}
        targetBtn={{
          onClick: () => {
            setBuilderVisible((old) => !old);
          },
        }}
        hasRules={!!humanStringRules}
        rulesContent={{
          children: (
            <span className="line-clamp-3 overflow-hidden">
              {humanStringRules}
            </span>
          ),
        }}
      />
    </>
  );
}

const SegmentControls = React.forwardRef(SegmentControls_);
export default SegmentControls;
