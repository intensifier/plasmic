// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Analytics queries getConversionRateQuery should generate project conversion rate per day sliced 1`] = `"select _moment as time, slice, countIf(maxSteps >= 1) as renders, countIf(maxSteps = 2) as conversions, if (renders > 0, conversions / renders, 0) as conversion_rate from ( select distinct_id, toStartOfDay(timestamp) as _moment, slice, max(steps) as maxSteps from ( select distinct_id, timestamp, slice, if(latest_render < latest_conversion, 2, if(latest_render is not null, 1, 0)) as steps from ( select distinct_id, timestamp, latest_render, slice, min(latest_conversion) over ( partition by ( distinct_id, slice, toStartOfDay(timestamp) ) order by timestamp DESC ) latest_conversion from ( select distinct_id, timestamp, if(event = '$render', timestamp, null) as latest_render, if(event = '$conversion', timestamp, null) as latest_conversion ,JSONExtractString(events.properties, 'splitId') as slice from events where ( ( event = '$render' and has(JSONExtractArrayRaw(events.properties, 'teamIds'), '"gdYGJk5bkBPVEmFndhpoz4"') and has(JSONExtractArrayRaw(events.properties, 'projectIds'), '"kjuFFTSZb8fanzCHT2C1jz"') and JSONExtractString(events.properties, 'rootComponentId') = 'provider' and JSONHas(events.properties, 'splitId') ) or ( event = '$conversion' and has(JSONExtractArrayRaw(events.properties, 'projectIds'), '"kjuFFTSZb8fanzCHT2C1jz"') and JSONHas(events.properties, 'splitId') ) ) and toStartOfDay(events.timestamp, 'America/Bahia') >= '2022-06-01 00:00:00' and toStartOfDay(events.timestamp, 'America/Bahia') <= '2022-07-30 23:59:99' ) ) ) group by distinct_id, toStartOfDay(timestamp) ,slice ) group by time ,slice"`;

exports[`Analytics queries getConversionRateQuery should generate project conversion rate per month sliced 1`] = `"select _moment as time, slice, countIf(maxSteps >= 1) as renders, countIf(maxSteps = 2) as conversions, if (renders > 0, conversions / renders, 0) as conversion_rate from ( select distinct_id, toStartOfMonth(timestamp) as _moment, slice, max(steps) as maxSteps from ( select distinct_id, timestamp, slice, if(latest_render < latest_conversion, 2, if(latest_render is not null, 1, 0)) as steps from ( select distinct_id, timestamp, latest_render, slice, min(latest_conversion) over ( partition by ( distinct_id, slice, toStartOfMonth(timestamp) ) order by timestamp DESC ) latest_conversion from ( select distinct_id, timestamp, if(event = '$render', timestamp, null) as latest_render, if(event = '$conversion', timestamp, null) as latest_conversion ,JSONExtractString(events.properties, 'splitId') as slice from events where ( ( event = '$render' and has(JSONExtractArrayRaw(events.properties, 'teamIds'), '"gdYGJk5bkBPVEmFndhpoz4"') and has(JSONExtractArrayRaw(events.properties, 'projectIds'), '"kjuFFTSZb8fanzCHT2C1jz"') and JSONExtractString(events.properties, 'rootComponentId') = 'provider' and JSONHas(events.properties, 'splitId') ) or ( event = '$conversion' and has(JSONExtractArrayRaw(events.properties, 'projectIds'), '"kjuFFTSZb8fanzCHT2C1jz"') and JSONHas(events.properties, 'splitId') ) ) and toStartOfMonth(events.timestamp, 'America/Bahia') >= '2022-06-01' and toStartOfMonth(events.timestamp, 'America/Bahia') <= '2022-07-30' ) ) ) group by distinct_id, toStartOfMonth(timestamp) ,slice ) group by time ,slice"`;

exports[`Analytics queries getConversionRateQuery should generate team conversion rate per day 1`] = `"select _moment as time, countIf(maxSteps >= 1) as renders, countIf(maxSteps = 2) as conversions, if (renders > 0, conversions / renders, 0) as conversion_rate from ( select distinct_id, toStartOfDay(timestamp) as _moment, max(steps) as maxSteps from ( select distinct_id, timestamp, if(latest_render < latest_conversion, 2, if(latest_render is not null, 1, 0)) as steps from ( select distinct_id, timestamp, latest_render, min(latest_conversion) over ( partition by ( distinct_id, toStartOfDay(timestamp) ) order by timestamp DESC ) latest_conversion from ( select distinct_id, timestamp, if(event = '$render', timestamp, null) as latest_render, if(event = '$conversion', timestamp, null) as latest_conversion from events where ( ( event = '$render' and has(JSONExtractArrayRaw(events.properties, 'teamIds'), '"gdYGJk5bkBPVEmFndhpoz4"') and JSONExtractString(events.properties, 'rootComponentId') = 'provider' ) or ( event = '$conversion' ) ) and toStartOfDay(events.timestamp, 'America/Bahia') >= '2022-06-01 00:00:00' and toStartOfDay(events.timestamp, 'America/Bahia') <= '2022-07-30 23:59:99' ) ) ) group by distinct_id, toStartOfDay(timestamp) ) group by time"`;

exports[`Analytics queries getConversionRateQuery should generate team conversion rate per month 1`] = `"select _moment as time, countIf(maxSteps >= 1) as renders, countIf(maxSteps = 2) as conversions, if (renders > 0, conversions / renders, 0) as conversion_rate from ( select distinct_id, toStartOfMonth(timestamp) as _moment, max(steps) as maxSteps from ( select distinct_id, timestamp, if(latest_render < latest_conversion, 2, if(latest_render is not null, 1, 0)) as steps from ( select distinct_id, timestamp, latest_render, min(latest_conversion) over ( partition by ( distinct_id, toStartOfMonth(timestamp) ) order by timestamp DESC ) latest_conversion from ( select distinct_id, timestamp, if(event = '$render', timestamp, null) as latest_render, if(event = '$conversion', timestamp, null) as latest_conversion from events where ( ( event = '$render' and has(JSONExtractArrayRaw(events.properties, 'teamIds'), '"gdYGJk5bkBPVEmFndhpoz4"') and JSONExtractString(events.properties, 'rootComponentId') = 'provider' ) or ( event = '$conversion' ) ) and toStartOfMonth(events.timestamp, 'America/Bahia') >= '2022-06-01' and toStartOfMonth(events.timestamp, 'America/Bahia') <= '2022-07-30' ) ) ) group by distinct_id, toStartOfMonth(timestamp) ) group by time"`;

exports[`Analytics queries getImpressionsQuery should generate project impressions per day sliced 1`] = `"select toStartOfDay(timestamp, 'America/Bahia') as time, JSONExtractString(events.properties, 'splitId') as slice, count(*) as impressions, count(distinct distinct_id) as unique_impressions from events where event = '$render' and has(JSONExtractArrayRaw(events.properties, 'teamIds'), '"gdYGJk5bkBPVEmFndhpoz4"') and has(JSONExtractArrayRaw(events.properties, 'projectIds'), '"kjuFFTSZb8fanzCHT2C1jz"') and JSONExtractString(events.properties, 'rootComponentId') = 'provider' and JSONHas(events.properties, 'splitId') and toStartOfDay(events.timestamp, 'America/Bahia') >= '2022-06-01 00:00:00' and toStartOfDay(events.timestamp, 'America/Bahia') <= '2022-07-30 23:59:99' group by time , slice"`;

exports[`Analytics queries getImpressionsQuery should generate project impressions per month sliced 1`] = `"select toStartOfMonth(timestamp, 'America/Bahia') as time, JSONExtractString(events.properties, 'splitId') as slice, count(*) as impressions, count(distinct distinct_id) as unique_impressions from events where event = '$render' and has(JSONExtractArrayRaw(events.properties, 'teamIds'), '"gdYGJk5bkBPVEmFndhpoz4"') and has(JSONExtractArrayRaw(events.properties, 'projectIds'), '"kjuFFTSZb8fanzCHT2C1jz"') and JSONExtractString(events.properties, 'rootComponentId') = 'provider' and JSONHas(events.properties, 'splitId') and toStartOfMonth(events.timestamp, 'America/Bahia') >= '2022-06-01' and toStartOfMonth(events.timestamp, 'America/Bahia') <= '2022-07-30' group by time , slice"`;

exports[`Analytics queries getImpressionsQuery should generate team impressions per day 1`] = `"select toStartOfDay(timestamp, 'America/Bahia') as time, count(*) as impressions, count(distinct distinct_id) as unique_impressions from events where event = '$render' and has(JSONExtractArrayRaw(events.properties, 'teamIds'), '"gdYGJk5bkBPVEmFndhpoz4"') and JSONExtractString(events.properties, 'rootComponentId') = 'provider' and toStartOfDay(events.timestamp, 'America/Bahia') >= '2022-06-01 00:00:00' and toStartOfDay(events.timestamp, 'America/Bahia') <= '2022-07-30 23:59:99' group by time"`;

exports[`Analytics queries getImpressionsQuery should generate team impressions per month 1`] = `"select toStartOfMonth(timestamp, 'America/Bahia') as time, count(*) as impressions, count(distinct distinct_id) as unique_impressions from events where event = '$render' and has(JSONExtractArrayRaw(events.properties, 'teamIds'), '"gdYGJk5bkBPVEmFndhpoz4"') and JSONExtractString(events.properties, 'rootComponentId') = 'provider' and toStartOfMonth(events.timestamp, 'America/Bahia') >= '2022-06-01' and toStartOfMonth(events.timestamp, 'America/Bahia') <= '2022-07-30' group by time"`;
